<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>registers on Pablo de Juan Fidalgo</title><link>https://pabdj.github.io/tags/registers/</link><description>Recent content in registers on Pablo de Juan Fidalgo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Pablo de Juan Fidalgo</copyright><lastBuildDate>Sat, 17 Dec 2022 12:50:58 +0530</lastBuildDate><atom:link href="https://pabdj.github.io/tags/registers/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Dynamic Techniques - Notes &amp; Labs</title><link>https://pabdj.github.io/posts/basicdynamictechniques_notesandlabs/basicdynamictechniques_notesandlabs/</link><pubDate>Sat, 17 Dec 2022 12:50:58 +0530</pubDate><guid>https://pabdj.github.io/posts/basicdynamictechniques_notesandlabs/basicdynamictechniques_notesandlabs/</guid><description>Notes Running malware How to launch DLLs successfully in dynamic analysis: take a look at the Exports with CFF Explorer and afterwards run the following command C:\&amp;gt;rundll32.exe DLLname, Export arguments with one of the Export functions that have appeared in the static analysis. To convert the DLL file into an executable, modify the PE header wiping the IMAGE_FILE_DLL (0x2000) flag from the Characteristics field in the IMAGE_FILE_HEADER. DLL malware may also need to be installed as a service, sometimes with a convenient export such as InstallService, as listed in ipr32x.</description></item></channel></rss>