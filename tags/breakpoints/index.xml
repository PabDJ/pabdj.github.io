<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>breakpoints on Pablo de Juan Fidalgo</title><link>https://pabdj.github.io/tags/breakpoints/</link><description>Recent content in breakpoints on Pablo de Juan Fidalgo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Pablo de Juan Fidalgo</copyright><lastBuildDate>Tue, 27 Dec 2022 12:25:58 +0530</lastBuildDate><atom:link href="https://pabdj.github.io/tags/breakpoints/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced Dynamic Techniques - Debugging</title><link>https://pabdj.github.io/posts/advanced-dynamic-techniques_debugging/</link><pubDate>Tue, 27 Dec 2022 12:25:58 +0530</pubDate><guid>https://pabdj.github.io/posts/advanced-dynamic-techniques_debugging/</guid><description>Notes Kernel vs. User-Mode Debugging It is more challenging to debug kernel-mode code than to debug user-mode code because you usually need two different systems for kernel mode.
Kernel debugging is performed on two systems because there is only one kernel; if the kernel is at a breakpoint, no applications can be running on the system. One system runs the code that is being debugged, and another runs the debugger. Additionally, the OS must be configured to allow for kernel debugging, and you must connect the two machines.</description></item></channel></rss>