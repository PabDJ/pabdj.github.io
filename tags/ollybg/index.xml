<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ollybg on Pablo de Juan Fidalgo</title><link>https://pabdj.github.io/tags/ollybg/</link><description>Recent content in ollybg on Pablo de Juan Fidalgo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Pablo de Juan Fidalgo</copyright><lastBuildDate>Fri, 28 Apr 2023 00:30:58 +0530</lastBuildDate><atom:link href="https://pabdj.github.io/tags/ollybg/index.xml" rel="self" type="application/rss+xml"/><item><title>Malware Functionality - Data Encoding</title><link>https://pabdj.github.io/posts/malwarefunctionality_dataencoding/data-encoding/</link><pubDate>Fri, 28 Apr 2023 00:30:58 +0530</pubDate><guid>https://pabdj.github.io/posts/malwarefunctionality_dataencoding/data-encoding/</guid><description>Table of Contents Notes Simple Ciphers XOR NULL-Preserving Single-Byte XOR Encoding Other Simple Encoding Schemes Common Cryptographic Algorithms Searching for High-Entropy Content Labs Lab 1 Lab 2 Lab 3 Notes A malware author might use a layer of encoding for these purposes:
To hide configuration information, such as a command-and-control domain. To save information to a staging file before stealing it. To store strings used by the malware and decode them just before they are needed.</description></item><item><title>Malware Functionality - Covert Malware Launching</title><link>https://pabdj.github.io/posts/malwarefunctionality_covert_malware_launching/covert-malware-launching/</link><pubDate>Sat, 01 Apr 2023 15:00:58 +0530</pubDate><guid>https://pabdj.github.io/posts/malwarefunctionality_covert_malware_launching/covert-malware-launching/</guid><description>Table of Contents Notes Launchers Process Injection DLL injection Direct injection Process Replacement Hook Injection Keyloggers Using SetWindowsHookEx Detours APC Injection From User Space From Kernel Space Labs Lab 1 Lab 2 Lab 3 Lab 4 Notes Launchers Type of malware that sets itself or another piece of malware for immediate or future covert execution. Launchers will often store malware within the resource section. When the launcher is run, it extracts an embedded executable or DLL from the resource section before launching it.</description></item><item><title>Malware Functionality - Malware Behaviour</title><link>https://pabdj.github.io/posts/malwarefunctionality_malware_behaviour/malware-behaviour/</link><pubDate>Mon, 27 Mar 2023 22:53:58 +0530</pubDate><guid>https://pabdj.github.io/posts/malwarefunctionality_malware_behaviour/malware-behaviour/</guid><description>Table of Contents Notes Downloaders and Launchers Backdoors Reverse shell RATs Botnets Credential Stealers GINA Interception Hash Dumping Keystroke Logging Persistence Mechanisms Windows Registry AppInit_DLLs Winlogon Notify SvcHost DLLs Trojanized System Binaries DLL Load-Order Hijacking Privilege Escalation Covering Its Tracks—User-Mode Rootkits IAT Hooking Inline Hooking Labs Lab 1 Lab 2 Lab 3 Notes Downloaders and Launchers Downloaders simply download another piece of malware from the Internet and execute it on the local system.</description></item></channel></rss>